---
# Retrieve the current hostname, because {{ ansible_hostname }} still contains the old name
- shell: hostname
  register: current_hostname

- name: install mysql packages
  become: yes
  apt: pkg={{ item }} state=latest
  with_items:
    - mysql-server
    - mysql-client
    - python-mysqldb
    

# Note: We do not use mysql_user for this operation, as it doesn't always update
# the root password correctly. See: https://goo.gl/MSOejW
# Set root password for MySQL >= 5.7.x.
#- name: Update MySQL root password for localhost root account (5.7.x).
#  become: yes
#  shell: >
#    mysql -u root -NBe
#    'ALTER USER root@"{{ item }}" IDENTIFIED WITH mysql_native_password BY "{{ mysql.root_password }}";'
#  with_items:
#    - localhost

- name: disable ONLY_FULL_GROUP_BY mode
  lineinfile: dest=/etc/mysql/mysql.conf.d/mysqld.cnf state=present insertafter='[mysqld]' regexp='^;?sql_mode' line='sql_mode = "STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION"'

- service: name=mysql state=restarted

- name: create databases
  mysql_db: name={{ mysql.database }} state=present login_user=root login_password={{ mysql.root_password }}

- name: import dump
  mysql_db: name={{ mysql.database }} state=import login_user=root login_password={{ mysql.root_password }} target=/vagrant/{{ mysql.dump }}
  when: mysql.dump

- name: create users
  mysql_user: name={{ mysql.user }} password={{ mysql.password }} priv={{ mysql.database }}.*:ALL state=present login_user=root login_password={{ mysql.root_password }}

